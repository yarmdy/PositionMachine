//------------------------------------------------------------------------------
// <auto-generated>
//     此代码已从模板生成。
//
//     手动更改此文件可能导致应用程序出现意外的行为。
//     如果重新生成代码，将覆盖对此文件的手动更改。
// </auto-generated>
//------------------------------------------------------------------------------

namespace ZEHOU.PM.DB.dbLabelMid
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class dbLabelMidEntities : DbContext
    {
        public dbLabelMidEntities()
            : base("name=dbLabelMidEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<GidRemark> GidRemarks { get; set; }
        public virtual DbSet<GroupReportTime> GroupReportTimes { get; set; }
        public virtual DbSet<GroupReportTimeNew> GroupReportTimeNews { get; set; }
        public virtual DbSet<Label> Labels { get; set; }
        public virtual DbSet<OperateRequest> OperateRequests { get; set; }
        public virtual DbSet<Patient> Patients { get; set; }
        public virtual DbSet<Refund_Label> Refund_Label { get; set; }
        public virtual DbSet<RuleReport> RuleReports { get; set; }
        public virtual DbSet<sysdiagram> sysdiagrams { get; set; }
        public virtual DbSet<TubeColor> TubeColors { get; set; }
        public virtual DbSet<upgrade> upgrades { get; set; }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> sp_ins_Sorting(string bARCODE, string tESTITEM, string tESTGROUP, string pATIENTID, string pATIENTNAME, string pATIENTSEX, string pATIENTAGE, string pATIENTTYPE, string dATASOURCE, Nullable<int> sORTINGSTATE, Nullable<int> signForState, string rESERVE1, string rESERVE2, string rESERVE3, string rESERVE4, string rESERVE5, string rESERVE6, string rESERVE7, string rESERVE8, string rESERVE9, string rESERVE10, string rESERVE11, string rESERVE12, string rESERVE13, string rESERVE14, string rESERVE15)
        {
            var bARCODEParameter = bARCODE != null ?
                new ObjectParameter("BARCODE", bARCODE) :
                new ObjectParameter("BARCODE", typeof(string));
    
            var tESTITEMParameter = tESTITEM != null ?
                new ObjectParameter("TESTITEM", tESTITEM) :
                new ObjectParameter("TESTITEM", typeof(string));
    
            var tESTGROUPParameter = tESTGROUP != null ?
                new ObjectParameter("TESTGROUP", tESTGROUP) :
                new ObjectParameter("TESTGROUP", typeof(string));
    
            var pATIENTIDParameter = pATIENTID != null ?
                new ObjectParameter("PATIENTID", pATIENTID) :
                new ObjectParameter("PATIENTID", typeof(string));
    
            var pATIENTNAMEParameter = pATIENTNAME != null ?
                new ObjectParameter("PATIENTNAME", pATIENTNAME) :
                new ObjectParameter("PATIENTNAME", typeof(string));
    
            var pATIENTSEXParameter = pATIENTSEX != null ?
                new ObjectParameter("PATIENTSEX", pATIENTSEX) :
                new ObjectParameter("PATIENTSEX", typeof(string));
    
            var pATIENTAGEParameter = pATIENTAGE != null ?
                new ObjectParameter("PATIENTAGE", pATIENTAGE) :
                new ObjectParameter("PATIENTAGE", typeof(string));
    
            var pATIENTTYPEParameter = pATIENTTYPE != null ?
                new ObjectParameter("PATIENTTYPE", pATIENTTYPE) :
                new ObjectParameter("PATIENTTYPE", typeof(string));
    
            var dATASOURCEParameter = dATASOURCE != null ?
                new ObjectParameter("DATASOURCE", dATASOURCE) :
                new ObjectParameter("DATASOURCE", typeof(string));
    
            var sORTINGSTATEParameter = sORTINGSTATE.HasValue ?
                new ObjectParameter("SORTINGSTATE", sORTINGSTATE) :
                new ObjectParameter("SORTINGSTATE", typeof(int));
    
            var signForStateParameter = signForState.HasValue ?
                new ObjectParameter("SignForState", signForState) :
                new ObjectParameter("SignForState", typeof(int));
    
            var rESERVE1Parameter = rESERVE1 != null ?
                new ObjectParameter("RESERVE1", rESERVE1) :
                new ObjectParameter("RESERVE1", typeof(string));
    
            var rESERVE2Parameter = rESERVE2 != null ?
                new ObjectParameter("RESERVE2", rESERVE2) :
                new ObjectParameter("RESERVE2", typeof(string));
    
            var rESERVE3Parameter = rESERVE3 != null ?
                new ObjectParameter("RESERVE3", rESERVE3) :
                new ObjectParameter("RESERVE3", typeof(string));
    
            var rESERVE4Parameter = rESERVE4 != null ?
                new ObjectParameter("RESERVE4", rESERVE4) :
                new ObjectParameter("RESERVE4", typeof(string));
    
            var rESERVE5Parameter = rESERVE5 != null ?
                new ObjectParameter("RESERVE5", rESERVE5) :
                new ObjectParameter("RESERVE5", typeof(string));
    
            var rESERVE6Parameter = rESERVE6 != null ?
                new ObjectParameter("RESERVE6", rESERVE6) :
                new ObjectParameter("RESERVE6", typeof(string));
    
            var rESERVE7Parameter = rESERVE7 != null ?
                new ObjectParameter("RESERVE7", rESERVE7) :
                new ObjectParameter("RESERVE7", typeof(string));
    
            var rESERVE8Parameter = rESERVE8 != null ?
                new ObjectParameter("RESERVE8", rESERVE8) :
                new ObjectParameter("RESERVE8", typeof(string));
    
            var rESERVE9Parameter = rESERVE9 != null ?
                new ObjectParameter("RESERVE9", rESERVE9) :
                new ObjectParameter("RESERVE9", typeof(string));
    
            var rESERVE10Parameter = rESERVE10 != null ?
                new ObjectParameter("RESERVE10", rESERVE10) :
                new ObjectParameter("RESERVE10", typeof(string));
    
            var rESERVE11Parameter = rESERVE11 != null ?
                new ObjectParameter("RESERVE11", rESERVE11) :
                new ObjectParameter("RESERVE11", typeof(string));
    
            var rESERVE12Parameter = rESERVE12 != null ?
                new ObjectParameter("RESERVE12", rESERVE12) :
                new ObjectParameter("RESERVE12", typeof(string));
    
            var rESERVE13Parameter = rESERVE13 != null ?
                new ObjectParameter("RESERVE13", rESERVE13) :
                new ObjectParameter("RESERVE13", typeof(string));
    
            var rESERVE14Parameter = rESERVE14 != null ?
                new ObjectParameter("RESERVE14", rESERVE14) :
                new ObjectParameter("RESERVE14", typeof(string));
    
            var rESERVE15Parameter = rESERVE15 != null ?
                new ObjectParameter("RESERVE15", rESERVE15) :
                new ObjectParameter("RESERVE15", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("sp_ins_Sorting", bARCODEParameter, tESTITEMParameter, tESTGROUPParameter, pATIENTIDParameter, pATIENTNAMEParameter, pATIENTSEXParameter, pATIENTAGEParameter, pATIENTTYPEParameter, dATASOURCEParameter, sORTINGSTATEParameter, signForStateParameter, rESERVE1Parameter, rESERVE2Parameter, rESERVE3Parameter, rESERVE4Parameter, rESERVE5Parameter, rESERVE6Parameter, rESERVE7Parameter, rESERVE8Parameter, rESERVE9Parameter, rESERVE10Parameter, rESERVE11Parameter, rESERVE12Parameter, rESERVE13Parameter, rESERVE14Parameter, rESERVE15Parameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    }
}
